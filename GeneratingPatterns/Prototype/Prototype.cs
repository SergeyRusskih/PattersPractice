namespace Patterns.GeneratingPatterns.Prototype
{
    /// <summary>
    /// Паттерн Prototype - создание новых объектов путем копирования существующего
    /// 
    /// Используется, когда:
    ///     - система не должна зависеть от того, как в ней создаются, компонируются и представляются продуты
    ///     - инстанцианируемые классы определяются во время выполнения (абстрактная фабрика)
    ///     - для того чтобы избежать построения иерархий классов или фабрик, параллельных иерархии классов продуктов
    ///     - экземпляры класса могут находиться в одном из не очень большого числа различных состояний.
    ///       Может оказаться удобнее установить соответствующее число прототипов и клонировать их, а не инстанцировать 
    ///       каждый раз класс вручную в подходящем состоянии
    /// 
    /// Участники:
    ///     - <see cref="Program">Client</see> создает новый объект, обращаясь к прототипу с запросом клонировать себя
    ///     - <see cref="Prototype">Prototype</see> объявляет интерфейс для клонирования самого себя
    ///     - <see cref="ConcretePrototype1">ConcreteProtype</see> реализует операцию клонирования себя
    /// 
    /// В некоторых отношениях прототип и абстрактная фабрика являются конкурентами
    /// </summary>
    public abstract class Prototype
    {
        public virtual string State => "Initial state";

        public abstract Prototype Clone();
    }
}
