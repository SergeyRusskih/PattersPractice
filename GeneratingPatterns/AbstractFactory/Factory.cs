using System;

namespace Patterns.GeneratingPatterns.AbstractFactory
{
    /// <summary>
    /// Паттерн Abstract Factory - Производство семейства объектов
    /// 
    /// Производит семйство связанных объектов, устанавливает зависимости
    /// между объектами. Возвращает интерфейсы вместо
    /// конкретных объектов чтобы абстрагировать создание в конкретных
    /// имплементациях абстрактной фабрики. Клиенты пользуются интерфейсом Factory,
    /// им ничего не известно о конкретных реализациях.
    /// 
    /// Преимущества:
    ///     - изолирует конкретные классы
    ///     - упрощает замену семейств объектов
    ///     - гарантирует сочетаемость объектов
    ///    
    /// Особенность:
    ///     - фабрика соществует в единственном экземпляре (синглетон)
    ///     - абстрактная фабрика объявляет только интерфейс, создание делигируется конкретным реализациям
    ///     - классическая реализация - набор фабричных методов
    ///     - также может быть реализована через прототип 
    /// </summary>
    public abstract class Factory : IFactory
    {
        /// <summary>
        /// Возвращает нитерфейс, а не конкретный объект 
        /// </summary>
        /// <returns></returns>
        public abstract IComparable CreateComparable();

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public abstract ICloneable CreateCloneable();
    }
}
